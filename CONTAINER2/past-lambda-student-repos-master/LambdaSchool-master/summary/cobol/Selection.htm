<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
    <meta name="GENERATOR" content="Mozilla/4.0 [en] (WinNT; I) [Netscape]" />
    <title>COBOL Selection Constructs</title>
  </head>
  <body
    text="#000000"
    bgcolor="#FFFFFF"
    link="#0000FF"
    vlink="#FF0000"
    alink="#009B00"
  >
    <table border="1" width="715">
      <tr>
        <td>
          <table width="710" cellpadding="4" cellspacing="0" border="0">
            <tr>
              <td
                valign="top"
                align="left"
                width="700"
                bgcolor="#FFFFFF"
                colspan="2"
              >
                <center>
                  <h2>
                    <img
                      src="/cobol/course/Resources/pics/t-CobolTut.gif"
                      width="173"
                      height="59"
                    />
                  </h2>
                </center>
                <center>
                  <h2><b>COBOL Selection Constructs</b></h2>
                  <hr />
                </center>
                <table border="0" width="700" vspace="15">
                  <tr>
                    <td width="3%" valign="TOP">&nbsp;</td>
                    <td width="4%" valign="TOP">
                      <img
                        src="Resources/pics/BallGreenG.gif"
                        hspace="4"
                        height="13"
                        width="13"
                        align="TOP"
                        vspace="4"
                      />
                    </td>
                    <td width="93%">
                      <b><a href="#intro" target="">Introduction</a><br /> </b
                      ><font size="-1"
                        >Unit aims, objectives, prerequisites.</font
                      ><br />
                      <br />
                    </td>
                  </tr>
                  <tr>
                    <td width="3%" valign="TOP">&nbsp;</td>
                    <td width="4%" valign="TOP">
                      <img
                        src="Resources/pics/BallGreenG.gif"
                        hspace="4"
                        height="13"
                        width="13"
                        align="TOP"
                        vspace="4"
                      />
                    </td>
                    <td width="93%" valign="top">
                      <p>
                        <b
                          ><a href="#part1" target="">Selection using IF</a
                          ><br /> </b
                        ><font size="-1"
                          >This section demonstrates selection using the IF
                          statement. It introduces Relation Conditions, Class
                          Condition, Sign Condition and Complex Conditions. It
                          also covers Implied Subjects and Nested IFs.</font
                        ><font size="-1">
                          <br />
                          <br />
                        </font>
                      </p>
                    </td>
                  </tr>
                  <tr>
                    <td width="3%" valign="TOP">&nbsp;</td>
                    <td width="4%" valign="TOP">
                      <img
                        src="Resources/pics/BallGreenG.gif"
                        hspace="4"
                        height="13"
                        width="13"
                        align="TOP"
                        vspace="4"
                      />
                    </td>
                    <td width="93%" valign="top">
                      <div align="left">
                        <b
                          ><a href="#part2" target="">Condition Names</a
                          ><br /> </b
                        ><font size="-1"
                          >In this section the concept of a Condition Name is
                          explained. <br />
                          <br />
                        </font>
                      </div>
                    </td>
                  </tr>
                  <tr>
                    <td width="3%" valign="TOP">&nbsp;</td>
                    <td width="4%" valign="TOP">
                      <img
                        src="Resources/pics/BallGreenG.gif"
                        hspace="4"
                        height="13"
                        width="13"
                        align="TOP"
                        vspace="4"
                      />
                    </td>
                    <td width="93%">
                      <div align="left">
                        <b
                          ><a href="#part3" target=""
                            >Using the SET verb with Condition Names</a
                          ><br /> </b
                        ><font size="-1"
                          >This section demonstrates how the SET verb may be
                          used to set a Condition Name to true.<br />
                        </font>
                        <br />
                      </div>
                    </td>
                  </tr>
                  <tr>
                    <td width="3%" valign="TOP">&nbsp;</td>
                    <td width="4%" valign="TOP">
                      <img
                        src="Resources/pics/BallGreenG.gif"
                        hspace="4"
                        height="13"
                        width="13"
                        align="TOP"
                        vspace="4"
                      />
                    </td>
                    <td width="93%">
                      <div align="left">
                        <b
                          ><a href="#part4" target="">The EVALUATE verb </a
                          ><br /> </b
                        ><font size="-1"
                          >In this section COBOL's version of Case/Switch is
                          introduced.<br />
                        </font>
                        <br />
                      </div>
                    </td>
                  </tr>
                </table>
                <hr />
              </td>
            </tr>
            <tr>
              <td
                valign="top"
                align="LEFT"
                width="700"
                bgcolor="#993300"
                colspan="2"
              >
                <h2 align="CENTER">
                  <font color="#FFFF00"
                    ><a name="intro"></a
                    ><font face="Arial, Helvetica, sans-serif"
                      >Introduction</font
                    ></font
                  >
                </h2>
              </td>
            </tr>
            <tr>
              <td valign="top" width="175" bgcolor="#FFFFCC">
                <h4>
                  <font color="#993300" face="Arial, Helvetica, sans-serif"
                    >Aims</font
                  >
                </h4>
              </td>
              <td width="540">
                <p>
                  In most procedural languages,<font size="-1"> </font>If<font
                    size="-1"
                  >
                  </font
                  >and Case/Switch are the only selection constructs supported.
                  COBOL supports advanced versions of both of these constructs,
                  but it also introduces the concept of Condition Names - a kind
                  of abstract condition.
                </p>
                <p>
                  In this tutorial we will examine COBOL's selection constructs,
                  the<font size="-1"> IF</font> and the
                  <font size="-1">EVALUATE</font> and we will demonstrate how to
                  create and use Condition Names.
                </p>
                <hr width="50%" />
              </td>
            </tr>
            <tr>
              <td valign="top" align="LEFT" width="175" bgcolor="#FFFFCC">
                <h4>
                  <font color="#800000" face="Arial, Helvetica, sans-serif"
                    >Objectives</font
                  >
                </h4>
              </td>
              <td width="540" valign="top">
                <p>By the end of this unit you should -</p>
                <ol>
                  <li>
                    Understand how an <font size="-1">IF</font> statement works.
                  </li>
                  <li>
                    Know the types of condition that COBOL supports and
                    understand how and when to use them.
                  </li>
                  <li>
                    Know the condition precedence rules and be able to create
                    complex conditions using <font size="-1">AND</font> and
                    <font size="-1">OR</font>.
                  </li>
                  <li>Know how to use Implied subjects.</li>
                  <li>
                    Be able to create nested
                    <font size="-1">IF</font> statements.
                  </li>
                  <li>
                    Understand how Condition Names work and be able to create
                    and use them.
                  </li>
                  <li>
                    Be able to use the <font size="-1">SET</font> verb to set a
                    Condition Name to true.
                  </li>
                  <li>
                    Know how to use a Condition Name to signal the end of a
                    Sequential File.
                  </li>
                  <li>
                    Understand how the <font size="-1">EVALUATE</font> works.
                  </li>
                </ol>
                <hr width="50%" />
              </td>
            </tr>
            <tr>
              <td
                valign="top"
                align="LEFT"
                width="175"
                bgcolor="#FFFFCC"
                height="77"
              >
                <h4>
                  <font color="#800000" face="Arial, Helvetica, sans-serif"
                    >Prerequisites</font
                  >
                </h4>
              </td>
              <td width="525" height="77" valign="top">
                <p>Introduction to COBOL</p>
                <p>Declaring data in COBOL</p>
                <p>Basic Procedure Division Commands</p>
              </td>
            </tr>
            <tr>
              <td
                valign="top"
                align="left"
                width="700"
                bgcolor="#FFFFFF"
                colspan="2"
              >
                <div align="center">
                  <hr width="100%" />
                  <p>
                    <a href="#top">
                      <img
                        src="Resources/pics/i-pagetop.gif"
                        width="132"
                        height="38"
                        border="0"
                    /></a>
                  </p>
                </div>
              </td>
            </tr>
            <tr>
              <td
                valign="top"
                align="LEFT"
                width="700"
                bgcolor="#993300"
                colspan="2"
              >
                <h2 align="CENTER">
                  <font color="#FFFF00"
                    ><a name="part1"></a
                    ><font face="Arial, Helvetica, sans-serif"
                      >Selection using IF</font
                    ></font
                  >
                </h2>
              </td>
            </tr>
            <tr>
              <td valign="TOP" align="LEFT" width="175" bgcolor="#FFFFCC">
                <h4>
                  <font color="#800000" face="Arial, Helvetica, sans-serif"
                    >Introduction</font
                  >
                </h4>
              </td>
              <td width="525" valign="top">
                <div align="center">
                  <p align="left">
                    When a program runs the program statements are executed one
                    after another in sequence unless a statement is encountered
                    that alters the order of execution.
                  </p>
                  <p align="left">
                    An IF statement is one of the statement types that can alter
                    the order of execution in the program.
                  </p>
                  <p align="left">
                    An IF statement allows the programmer to specify that the
                    block of code is to be executed only if the condition
                    attached to the IF statement is satisfied.
                  </p>
                  <hr width="50%" />
                </div>
              </td>
            </tr>
            <tr>
              <td valign="TOP" align="LEFT" width="175" bgcolor="#FFFFCC">
                <h4>
                  <font color="#800000" face="Arial, Helvetica, sans-serif"
                    >IF syntax</font
                  >
                </h4>
                <h4>&nbsp;</h4>
              </td>
              <td width="525" valign="top">
                <div align="center">
                  <p align="left">
                    <img
                      src="Resources/pics/Select1.gif"
                      width="379"
                      height="102"
                    />
                  </p>
                  <p align="left">
                    When an <font size="-1">IF</font> statement is encountered
                    in a program, the StatementBlock following the
                    <font size="-1">THEN</font> is executed, if the condition is
                    true, and the StatementBlock following the
                    <font size="-1">ELSE</font> (is used) is executed, if the
                    condition is false.
                  </p>
                  <p align="left">
                    The StatementBlock(s) can include any valid COBOL statement
                    including further <font size="-1">IF</font> constructs,
                    <font size="-1">PERFORM</font>s, etc.
                  </p>
                </div>
              </td>
            </tr>
            <tr>
              <td valign="TOP" align="LEFT" width="175" bgcolor="#FFFFCC">
                <h4>
                  <font color="#800000" face="Arial, Helvetica, sans-serif"
                    >Using the END-IF delimiter</font
                  >
                </h4>
              </td>
              <td width="525" valign="top">
                <div align="center">
                  <p align="left">
                    Although the scope of the
                    <font size="-1">IF</font> statement may be delimited by a
                    full-stop (the old way), or by the
                    <font size="-1">END-IF </font>(the new way), the
                    <font size="-1">END-IF </font>delimiter should always be
                    used.
                  </p>
                  <p align="left">
                    The <font size="-1">END-IF</font> makes explicit the scope
                    of the statement. Using a full stop to delimit the scope of
                    the IF can lead to problems. For instance, the two IF
                    statements below are supposed to perform the same task. But
                    the scope of the one on the left is delimited by the
                    <font size="-1">END-IF</font>, while that on the right is
                    delimited by a full stop.
                  </p>
                  <table width="85%" border="0" align="center">
                    <tr>
                      <td width="46%" valign="top">
                        <pre>
Statement1
Statement2
IF VarA > VarD THEN
   Statement3
   Statement4
END-IF
Statement5
Statement6.</pre
                        >
                      </td>
                      <td width="46%" valign="top">
                        <pre>
Statement1
Statement2
IF VarA > VarD THEN
   Statement3
   Statement4
Statement5
Statement6.</pre
                        >
                      </td>
                    </tr>
                  </table>
                  <p align="left">
                    Unfortunately, in the <font size="-1">IF</font> on the
                    right, the programmer has forgotten to follow Statement4 by
                    a delimiting full stop. This means that Statement5 and 6
                    will be included in the scope of the
                    <font size="-1">IF</font> (i.e. will only be executed if the
                    condition is true) by mistake. If you use full stops to
                    delimit the scope of an <font size="-1">IF</font> statement,
                    this is an easy mistake to make and, once made, it is
                    difficult to spot. A full stop is small and unobtrusive
                    compared to an <font size="-1">END-IF</font>.
                  </p>
                  <hr width="50%" />
                </div>
              </td>
            </tr>
            <tr>
              <td valign="TOP" align="LEFT" width="175" bgcolor="#FFFFCC">
                <h4>
                  <font color="#800000" face="Arial, Helvetica, sans-serif"
                    >Condition Types
                  </font>
                </h4>
              </td>
              <td width="525" valign="top">
                <p>
                  The<font size="-1"> IF</font> statement is not as simple as
                  the syntax diagram above seems to suggest. The condition
                  following the <font size="-1">IF,</font> is drawn from one of
                  the condition types shown in the table below.
                </p>
                <table
                  cellspacing="0"
                  border="1"
                  cellpadding="7"
                  width="241"
                  align="center"
                  height="180"
                >
                  <tr bgcolor="#FFFFCC">
                    <td valign="TOP">
                      <div align="center">
                        <b><font color="#FF0000">Condition Types</font></b>
                      </div>
                    </td>
                  </tr>
                  <tr bgcolor="#E1FFE1">
                    <td valign="TOP">
                      <ul>
                        <li>
                          <b>Simple Conditions</b>
                          <ul>
                            <li>Relation Conditions</li>
                            <li>Class Conditions</li>
                            <li>Sign Conditions</li>
                          </ul>
                        </li>
                        <li><b>Complex Conditions</b></li>
                        <li><b>Condition Name</b></li>
                      </ul>
                    </td>
                  </tr>
                </table>
                <p>
                  Simple and Complex conditions are examined in this section,
                  but Condition Names are so important that they are covered
                  separately in the next section.
                </p>
                <p>&nbsp;</p>
              </td>
            </tr>
            <tr>
              <td valign="TOP" align="LEFT" width="175" bgcolor="#FFFFCC">
                <h4>
                  <font color="#800000" face="Arial, Helvetica, sans-serif"
                    >Relation Conditions
                  </font>
                </h4>
              </td>
              <td width="525" valign="top">
                <div align="center">
                  <div align="center">
                    <p align="left">
                      <img
                        src="Resources/pics/Select2.gif"
                        width="484"
                        height="245"
                      />
                    </p>
                    <p align="left">
                      The syntax of a Relation Condition is shown above. As you
                      can see from the diagram a Relation Condition may be used
                      to test whether a value is less than, equal to, or greater
                      than, another value.
                    </p>
                    <p align="left">
                      In the comparison we can use the full words or the symbols
                      shown. Note however, that there is no symbol for
                      <font size="-1">NOT;</font> you must use the word if you
                      want to express this condition.
                    </p>
                    <p align="left">
                      When a condition is evaluated, it evaluates to either True
                      or False. It does not evaluate to 1 or 0.
                    </p>
                    <p align="left">
                      Note that the values of the compared items must be type
                      compatible. For instance, it is not valid to have a
                      statement that says
                    </p>
                    <pre align="left">
IF &quot;mike&quot; IS EQUAL TO 123 THEN etc
                  </pre
                    >
                    <div align="left">
                      <pre align="left">&nbsp; </pre>
                    </div>
                  </div>
                </div>
              </td>
            </tr>
            <tr>
              <td valign="TOP" align="LEFT" width="175" bgcolor="#FFFFCC">
                <h4>
                  <font color="#800000" face="Arial, Helvetica, sans-serif"
                    >Class Conditions
                  </font>
                </h4>
                <h4 align="center">
                  <img
                    src="Resources/pics/i-LightBulbTip.gif"
                    width="42"
                    height="44"
                  />
                </h4>
                <p align="left">
                  <font size="-1"
                    >Although this course will not cover the
                    <font size="-2">SPECIAL-NAMES </font>paragraph in detail it
                    is useful to acquaint yourself with its clauses.
                  </font>
                </p>
                <p align="left">
                  <font size="-1"
                    >As well as setting up a class name, the<font size="-2">
                      SPECIAL-NAMES </font
                    >paragraph allows you to do such things as;<br /> </font
                  ><font size="-1"
                    >Specify the collating sequence - e.g.
                    <font size="-2">ASCII</font> or <font size="-2">EBCDIC</font
                    ><br />
                    Specify the currency sign <br />
                    Create User Defined Figurative constants.</font
                  >
                </p>
                <p align="left">&nbsp;</p>
                <h4>&nbsp;</h4>
              </td>
              <td width="525" valign="top">
                <p>
                  <img
                    src="Resources/pics/Select3.gif"
                    width="312"
                    height="125"
                  />
                </p>
                <p>
                  Although COBOL data-items are not &quot;strongly typed&quot;,
                  they do fall into some broad categories or classes, such as
                  numeric or alphanumeric. A Class Condition may be used to
                  determine whether the value of data-item is a member of one
                  these classes. For instance, a
                  <font size="-1">NUMERIC</font> Class Condition might be used
                  on an alphanumeric (<font size="-1">PIC X</font>) or a numeric
                  (<font size="-1">PIC 9</font>) data-item to see if it
                  contained numeric data.
                </p>
                <p>
                  The UserDefinedClassName is name that a programmer can assign
                  to a set of characters. The programmer must use the
                  <font size="-1">CLASS</font> clause of the
                  <font size="-1">SPECIAL-NAMES</font> paragraph, of the
                  <font size="-1">CONFIGURATION SECTION,</font> in the
                  <font size="-1">ENVIRONMENT DIVISION,</font> to assign a class
                  name to a set of characters.
                </p>
                <p>
                  <b>Rules<br /> </b>The target of a class test must be a
                  data-item whose usage is explicitly or implicitly,
                  <font size="-1">DISPLAY</font>. In the case of numeric tests,
                  data items with a usage of
                  <font size="-1">PACKED-DECIMAL</font> may also be tested.
                </p>
                <p>
                  The numeric test may not be used with data items described as
                  alphabetic (PIC A) or with group items when any of the
                  elementary items specifies a sign.
                </p>
                <p>
                  An alphabetic test may not be used with any data items
                  described as numeric (PIC 9).
                </p>
                <p>
                  An data-item conforms to the UserDefinedClassName if its
                  contents consist entirely of the characters listed in the
                  definition of the UserDefinedClassName.
                </p>
                <p><b>Example </b></p>
                <pre>
* Uses the UPPER Intrinsic Function to convert to uppercase
IF InputChar IS ALPHABETIC-LOWER
   MOVE FUNCTION UPPER (InputChar) TO InputChar
END-IF

</pre
                >
              </td>
            </tr>
            <tr>
              <td valign="TOP" align="LEFT" width="175" bgcolor="#FFFFCC">
                <h4 align="left">
                  <font color="#800000" face="Arial, Helvetica, sans-serif"
                    >Sign Condition
                  </font>
                </h4>
              </td>
              <td width="525" valign="top">
                <p>
                  <img
                    src="Resources/pics/Select4.gif"
                    width="313"
                    height="76"
                  />
                </p>
                <p>
                  The Sign Condition determines whether or not the value of an
                  arithmetic expression is less than, greater than, or equal to
                  zero. Sign Conditions are shorter way of writing certain
                  Relational Conditions.
                </p>
                <p>&nbsp;</p>
              </td>
            </tr>
            <tr>
              <td valign="TOP" align="LEFT" width="175" bgcolor="#FFFFCC">
                <h4 align="left">
                  <font color="#800000" face="Arial, Helvetica, sans-serif"
                    >Complex Conditions</font
                  >
                </h4>
                <h4 align="left">&nbsp;</h4>
                <h4 align="left">&nbsp;</h4>
                <h4 align="left">&nbsp;</h4>
                <h4 align="left">&nbsp;</h4>
                <h4 align="left">&nbsp;</h4>
                <h4 align="left">&nbsp;</h4>
                <h4 align="left">&nbsp;</h4>
                <h4 align="left">&nbsp;</h4>
                <h4 align="left">&nbsp;</h4>
                <h4 align="center">&nbsp;</h4>
                <h4 align="center">
                  <img
                    src="Resources/pics/i-LightBulbTip.gif"
                    width="42"
                    height="44"
                  />
                </h4>
                <p align="left">
                  <font size="-1"
                    >You can see from the IF Amnt1 example, that figuring out
                    how a complex condition will be evaluated is not
                    straightfoward.<br /> </font
                  ><font size="-1"
                    >Always use brackets to make the order of evaluation
                    explicit.</font
                  >
                </p>
                <h4 align="left">&nbsp;</h4>
                <h4 align="left">&nbsp;</h4>
                <h4 align="left">&nbsp;</h4>
                <h4 align="left">&nbsp;</h4>
              </td>
              <td width="525" valign="top">
                <p>
                  <font size="-1"
                    ><img
                      src="Resources/pics/Select5.gif"
                      width="228"
                      height="52"
                  /></font>
                </p>
                <p>
                  Complex Conditions are formed by combining two or more simple
                  conditions using the conjunction operators
                  <font size="-1">OR </font>or <font size="-1">AND</font>.
                </p>
                <p>
                  Like other conditions in COBOL, a complex condition evaluates
                  to either True or False. A complex condition is an expression
                  and like arithmetic expressions it is evaluated from left to
                  right unless the order of evaluation is changed by the
                  precedence rules (shown below) or by bracketing.
                </p>
                <table
                  border
                  cellspacing="1"
                  cellpadding="7"
                  width="275"
                  bgcolor="#E1FFE1"
                  align="center"
                >
                  <tr bgcolor="#FFFFCC">
                    <td width="23%" valign="TOP">
                      <p align="CENTER">
                        <font color="#FF0000"><b>Precedence</b></font>
                      </p>
                    </td>

                    <td width="35%" valign="TOP">
                      <p align="CENTER">
                        <font color="#FF0000"><b>Condition Value</b></font>
                      </p>
                    </td>

                    <td width="42%" valign="TOP">
                      <p align="CENTER">
                        <font color="#FF0000"
                          ><b>Arithmetic Equivalent</b></font
                        >
                      </p>
                    </td>
                  </tr>
                  <tr>
                    <td width="23%" valign="TOP">
                      <p align="CENTER"><b>1.</b></p>
                    </td>

                    <td width="35%" valign="TOP">
                      <p align="CENTER"><font size="-1">NOT</font></p>
                    </td>

                    <td width="42%" valign="TOP">
                      <p align="CENTER"><b>**</b></p>
                    </td>
                  </tr>
                  <tr>
                    <td width="23%" valign="TOP">
                      <p align="CENTER"><b>2.</b></p>
                    </td>

                    <td width="35%" valign="TOP">
                      <p align="CENTER"><font size="-1">AND</font></p>
                    </td>

                    <td width="42%" valign="TOP">
                      <p align="CENTER"><b>*</b> or <b>/</b></p>
                    </td>
                  </tr>
                  <tr>
                    <td width="23%" valign="TOP">
                      <p align="CENTER"><b>3.</b></p>
                    </td>

                    <td width="35%" valign="TOP">
                      <p align="CENTER"><font size="-1">OR</font></p>
                    </td>

                    <td width="42%" valign="TOP">
                      <p align="CENTER"><b>+</b> or<b> -</b></p>
                    </td>
                  </tr>
                </table>
                <p><b>Example</b></p>
                <blockquote>
                  <pre>
IF Row > 0 AND Row < 26 THEN
   DISPLAY "On Screen" 
END-IF 

IF NOT Amnt1 < 10 OR Amnt2 = 50 AND Amnt3 > 150 THEN
   DISPLAY "Done"
END-IF
</pre
                  >
                </blockquote>
                <p>
                  <b>The effect of bracketing<br /> </b>Let's examine the last
                  example above to see what difference bracketing makes to the
                  order of evaluation.
                </p>
                <p>
                  First consider how the statement would be bracketed to make
                  explicit what is actually happening.
                </p>
                <blockquote>
                  <p>
                    The <font size="-1">NOT</font> takes precedence so we must
                    write - <font size="-1"><b>NOT</b></font
                    ><b> (Amnt1 &lt;10)</b>.<br />
                    The <font size="-1">AND </font>is next in precedence so we
                    must bracket -<br />
                    &nbsp;&nbsp;&nbsp;&nbsp;<b
                      >((Amnt2=50)<font size="-1"> AND</font> (Amnt3 &gt;
                      150))</b
                    >. <br />
                    Finally the <font size="-1">OR</font> is evaluated to give
                    the full condition as -<br />
                    &nbsp;&nbsp;&nbsp;&nbsp;(<font size="-1">NOT</font> (Amnt1 <
                    10)) <font size="-1">OR</font> ((Amnt2 = 50)
                    <font size="-1">AND</font> (Amnt3 > 150))
                  </p>
                </blockquote>
                <p>
                  If all the simple conditions are true; will the Complex
                  Condition be true? Let's check.
                </p>
                <table width="94%" border="1" align="center">
                  <tr>
                    <td width="16%" bgcolor="#FFFFCC">
                      <p align="center"><font size="-1">Condition</font></p>
                    </td>
                    <td width="84%" bgcolor="#E1FFE1">
                      <p align="center">
                        &nbsp;(<font size="-1">NOT </font>(Amnt1 < 10))
                        <font size="-1">OR </font>((Amnt2 = 50)
                        <font size="-1">AND</font> (Amnt3 > 150))
                      </p>
                    </td>
                  </tr>
                  <tr>
                    <td width="16%" bgcolor="#FFFFCC">
                      <p align="center"><font size="-1">Expressed as</font></p>
                    </td>
                    <td width="84%" bgcolor="#E1FFE1">
                      <pre>   (NOT    (T))   OR      ((T)   AND      (T)) </pre>
                    </td>
                  </tr>
                  <tr>
                    <td width="16%" height="17" bgcolor="#FFFFCC">
                      <div align="center">
                        <font size="-1">Evaluates to</font>
                      </div>
                    </td>
                    <td width="84%" height="17" bgcolor="#E1FFE1">
                      <pre>      (F)         OR             (T) </pre>
                    </td>
                  </tr>
                  <tr>
                    <td width="16%" bgcolor="#FFFFCC">
                      <div align="center">
                        <font size="-1">Evaluates to</font>
                      </div>
                    </td>
                    <td width="84%" bgcolor="#E1FFE1">
                      <pre>                 <b><font color="#FF0000">True </font></b></pre>
                    </td>
                  </tr>
                </table>
                <p>
                  Consider the condition in the table below and ask the same
                  question. Is the Complex Condition true if all the Simple
                  Conditions are true? &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                </p>
                <table width="93%" border="1" align="center">
                  <tr>
                    <td width="16%" bgcolor="#FFFFCC">
                      <p align="center"><font size="-1">Condition</font></p>
                    </td>
                    <td width="84%" bgcolor="#E1FFE1">
                      <p align="center">
                        <font size="-1">NOT </font>((Amnt1 < 10)
                        <font size="-1">OR</font> (Amnt2 = 50))
                        <font size="-1">AND</font> (Amnt3 > 150)
                      </p>
                    </td>
                  </tr>
                  <tr>
                    <td width="16%" bgcolor="#FFFFCC">
                      <p align="center"><font size="-1">Expressed as</font></p>
                    </td>
                    <td width="84%" bgcolor="#E1FFE1">
                      <pre>   NOT     ((T)   OR      (T))   AND      (T)</pre>
                    </td>
                  </tr>
                  <tr>
                    <td width="16%" height="17" bgcolor="#FFFFCC">
                      <div align="center">
                        <font size="-1">Evaluates to</font>
                      </div>
                    </td>
                    <td width="84%" height="17" bgcolor="#E1FFE1">
                      <pre>   NOT            (T)            AND      (T)</pre>
                    </td>
                  </tr>
                  <tr>
                    <td width="16%" bgcolor="#FFFFCC">
                      <div align="center">
                        <font size="-1">Evaluates to</font>
                      </div>
                    </td>
                    <td width="84%" bgcolor="#E1FFE1">
                      <pre>          (F)                    AND      (T)</pre>
                    </td>
                  </tr>
                  <tr>
                    <td width="16%" bgcolor="#FFFFCC">
                      <div align="center">
                        <font size="-1">Evaluates to</font>
                      </div>
                    </td>
                    <td width="84%" bgcolor="#E1FFE1">
                      <pre>                 <font color="#FF0000"><b>False</b></font></pre>
                    </td>
                  </tr>
                </table>
                <blockquote>
                  <blockquote>
                    <p>&nbsp;</p>
                  </blockquote>
                </blockquote>
                <p>
                  Now, consider the condition below and create a table similar
                  to the ones above. Is this Complex Condition true if all the
                  Simple Conditions are true?
                </p>
                <p align="center">
                  <font size="-1">IF NOT</font> (((Amnt1 < 10)
                  <font size="-1">OR</font> (Amnt2 = 50))
                  <font size="-1">AND </font>(Amnt3 > 150))
                  <font size="-1">THEN</font>
                </p>
                <hr width="50%" />
                <p>&nbsp;</p>
              </td>
            </tr>
            <tr>
              <td valign="TOP" align="LEFT" width="175" bgcolor="#FFFFCC">
                <h4 align="left">
                  <font color="#800000" face="Arial, Helvetica, sans-serif"
                    >Implied Subjects
                  </font>
                </h4>
              </td>
              <td width="525" valign="top">
                <p>
                  Although COBOL is often verbose, it does occasionally provide
                  constructs that enable quite succinct statements to be
                  written. Implied Subjects is one of these constructs.
                </p>
                <p>
                  You can use Implied Subjects when you are making a number of
                  comparisons against a single data-item.
                </p>
                <p>
                  For instance, in the first example in Complex Conditions
                  above, we check to see if Row is greater than 0 and Row is
                  less than 26. We could rewrite this statement using Implied
                  Subjects as-
                </p>
                <blockquote>
                  <pre>IF Row &gt; 0 AND &lt; 26 THEN etc</pre>
                </blockquote>
                <p>the Implied Subject here is Row.</p>
                <p>
                  <b>Examples</b><br />
                  In these examples the full condition is shown first and is
                  followed by the condition using Implied Subjects
                </p>
                <pre>
IF TotalAmt > 10000 AND TotalAmt < 50000 THEN etc. 
IF TotalAmt &gt; 10000 AND &lt; 50000 THEN etc
* The Implied Subject is - TotalAmt

IF Grade = "A" OR Grade = "B1" OR GRADE = "B2" OR GRADE = "B3"
IF Grade = "A" OR "B1" OR "B2" OR "B3"
*The Implied Subject is - Grade = "A"

IF VarA > VarB AND VarA > VarC AND VarA > VarD
   DISPLAY "VarA is the Greatest" <
END-IF 
IF VarA > VarB AND VarC AND VarD
   DISPLAY "VarA is the Greatest" <
END-IF 
* The Implied Subject is - VarA >

</pre
                >
                <hr width="50%" />
              </td>
            </tr>
            <tr>
              <td valign="TOP" align="LEFT" width="175" bgcolor="#FFFFCC">
                <h4 align="left">
                  <font color="#800000" face="Arial, Helvetica, sans-serif"
                    >Nested Ifs
                  </font>
                </h4>
                <h4 align="left">&nbsp;</h4>
                <h4 align="left">&nbsp;</h4>
                <h4 align="left">&nbsp;</h4>
                <h4 align="left">&nbsp;</h4>
                <h4 align="left">&nbsp;</h4>
                <h4 align="left">&nbsp;</h4>
                <h4 align="left">&nbsp;</h4>
                <h4 align="left">&nbsp;</h4>
                <h4 align="left">&nbsp;</h4>
                <h4 align="center">
                  <img src="Resources/pics/i-SAQ2.gif" width="32" height="46" />
                </h4>
              </td>
              <td width="525" valign="top">
                <p>COBOL allows nested <font size="-1">IF</font> statements.</p>
                <p>For example:</p>
                <blockquote>
                  <pre>
IF ( VarA < 10 ) AND ( VarB NOT > VarC ) THEN 
   IF VarG = 14 THEN 
        DISPLAY "First"
    ELSE 
        DISPLAY "Second" 
   END-IF 
 ELSE DISPLAY "Third" 
END-IF 
</pre
                  >
                </blockquote>
                <p>
                  The table below contains representations of the variables used
                  in the nested <font size="-1">Ifs</font> above. In each
                  instance, see if you can figure out which of the messages will
                  be displayed. To see the answer, move your cursor over the
                  text &quot;Answer&quot; and the correct answer should be
                  shown.
                </p>
                <form method="post" action="Selection.htm">
                  <table
                    width="50%"
                    border="1"
                    bgcolor="#E1FFE1"
                    align="center"
                  >
                    <tr bgcolor="#FFFFCC">
                      <td width="13%">
                        <div align="center">
                          <font color="#FF0000"><b>VarA</b></font>
                        </div>
                      </td>
                      <td width="13%">
                        <div align="center">
                          <font color="#FF0000"><b>VarB</b></font>
                        </div>
                      </td>
                      <td width="13%">
                        <div align="center">
                          <font color="#FF0000"><b>VarC</b></font>
                        </div>
                      </td>
                      <td width="12%">
                        <div align="center">
                          <font color="#FF0000"><b>VarG</b></font>
                        </div>
                      </td>
                      <td bgcolor="#FFFFCC" width="49%">
                        <div align="center">
                          <font color="#FF0000"
                            ><b><font size="-1">DISPLAY</font></b></font
                          >
                        </div>
                      </td>
                    </tr>
                    <tr>
                      <td width="13%">
                        <div align="center">3</div>
                      </td>
                      <td width="13%">
                        <div align="center">4</div>
                      </td>
                      <td width="13%">
                        <div align="center">15</div>
                      </td>
                      <td width="12%">
                        <div align="center">14</div>
                      </td>
                      <td bgcolor="#FFFFFF" width="49%">
                        <div align="center">
                          <select name="select">
                            <option selected>Click arrow for answer</option>
                            <option>First is displayed</option>
                          </select>
                        </div>
                      </td>
                    </tr>
                    <tr>
                      <td width="13%">
                        <div align="center">3</div>
                      </td>
                      <td width="13%">
                        <div align="center">4</div>
                      </td>
                      <td width="13%">
                        <div align="center">15</div>
                      </td>
                      <td width="12%">
                        <div align="center">15</div>
                      </td>
                      <td bgcolor="#FFFFFF" width="49%">
                        <div align="center">
                          <select name="select2">
                            <option selected>Click arrow for answer</option>
                            <option>Second is displayed</option>
                          </select>
                        </div>
                      </td>
                    </tr>
                    <tr>
                      <td width="13%">
                        <div align="center">3</div>
                      </td>
                      <td width="13%">
                        <div align="center">4</div>
                      </td>
                      <td width="13%">
                        <div align="center">3</div>
                      </td>
                      <td width="12%">
                        <div align="center">14</div>
                      </td>
                      <td bgcolor="#FFFFFF" width="49%">
                        <div align="center">
                          <select name="select3">
                            <option selected>Click arrow for answer</option>
                            <option>Third is displayed</option>
                          </select>
                        </div>
                      </td>
                    </tr>
                    <tr>
                      <td width="13%">
                        <div align="center">13</div>
                      </td>
                      <td width="13%">
                        <div align="center">4</div>
                      </td>
                      <td width="13%">
                        <div align="center">15</div>
                      </td>
                      <td width="12%">
                        <div align="center">14</div>
                      </td>
                      <td bgcolor="#FFFFFF" width="49%">
                        <div align="center">
                          <select name="select4">
                            <option selected>Click arrow for answer</option>
                            <option>Third is displayed</option>
                          </select>
                        </div>
                      </td>
                    </tr>
                  </table>
                </form>
                <p>&nbsp;</p>
                <blockquote>
                  <pre>
&nbsp;
</pre
                  >
                </blockquote>
              </td>
            </tr>
            <tr>
              <td
                valign="top"
                align="left"
                width="700"
                bgcolor="#FFFFFF"
                colspan="2"
              >
                <div align="center">
                  <hr />
                  <p>
                    <a href="#top">
                      <img
                        src="Resources/pics/i-pagetop.gif"
                        width="132"
                        height="38"
                        border="0"
                    /></a>
                  </p>
                </div>
              </td>
            </tr>
            <tr>
              <td
                valign="top"
                align="LEFT"
                width="700"
                bgcolor="#993300"
                colspan="2"
              >
                <h2 align="CENTER">
                  <font color="#FFFF00"
                    ><a name="part2"></a
                    ><font face="Arial, Helvetica, sans-serif"
                      >Condition Names
                    </font></font
                  >
                </h2>
              </td>
            </tr>
            <tr>
              <td
                valign="top"
                align="LEFT"
                width="175"
                bgcolor="#FFFFCC"
                height="355"
              >
                <h4 align="left">
                  <font color="#800000" face="Arial, Helvetica, sans-serif"
                    >Introduction</font
                  >
                </h4>
              </td>
              <td width="525" valign="top" height="355">
                <p>
                  Wherever a condition can occur, such as in an
                  <font size="-1">IF </font>statement or an
                  <font size="-1">EVALUATE</font> or a
                  <font size="-1">PERFORM..UNTIL</font>, a Condition Name (Level
                  88) may be used.
                </p>
                <p>
                  Condition Names are defined in the
                  <font size="-1">DATA DIVISION</font> using the special level
                  number 88. They are always associated with a data-item and are
                  defined immediately after the definition of the data-item.
                </p>
                <p>
                  A Condition Name is a name given to a specified subset of the
                  values which its associated data-item can hold.
                </p>
                <p>
                  Like a condition, a Condition Name evaluates to True or False.
                </p>
                <hr width="50%" />
              </td>
            </tr>
            <tr>
              <td valign="TOP" align="LEFT" width="175" bgcolor="#FFFFCC">
                <h4 align="left">
                  <font color="#800000" face="Arial, Helvetica, sans-serif"
                    >Condition Name Syntax</font
                  >
                </h4>
              </td>
              <td width="525" valign="top">
                <p align="left">
                  <img
                    src="/cobol/course/Resources/pics/Select6.gif"
                    width="501"
                    height="76"
                  />
                </p>
                <p align="left">
                  When used with Condition Names, the
                  <font size="-1">VALUE</font> clause does not assign a value.
                  It merely identifies the value(s) in the data-item which make
                  the Condition Name True.
                </p>
                <p align="left">
                  When identifying the condition values, you can specify a
                  single value, a list of values, a range of values, or any
                  combination of these.
                </p>
                <p align="left">
                  To specify a list of values, simply list the values after the
                  keyword <font size="-1">VALUE</font>. The list entries may be
                  separated by commas or spaces but must terminate with a
                  full-stop.
                </p>
                <blockquote>
                  <div align="left">
                    <pre align="left">
e.g. 02 DeptCode          PIC X. 
        88 ProductionDept VALUE �I�,�L�,�T�. </pre
                    >
                  </div>
                </blockquote>
                <p align="left">
                  To specify a range, use the keyword
                  <font size="-1">THRU</font>, or
                  <font size="-1">THROUGH</font>, to separate the low and high
                  values.
                </p>
                <blockquote>
                  <div align="left">
                    <pre align="left">
E.g. 02 AgeInYears  PIC 9(3). 
        88 Teenager VALUE 13 THRU 19. </pre
                    >
                  </div>
                  <div align="left"></div>
                </blockquote>
                <p align="left">
                  Several Condition Names may be associated with a single data
                  item,
                </p>
                <blockquote>
                  <pre align="left">
e.g. 02 AgeInYears  PIC 9(3). 
        88 Child    VALUE 0  THRU 12. 
        88 Teenager VALUE 13 THRU 19. 
        88 Adult    VALUE 21 THRU 999. 
</pre
                  >
                </blockquote>
                <blockquote>
                  <div align="left"></div>
                  <div align="left"></div>
                </blockquote>
                <p align="left">
                  More than one Condition Names may be true at the same time.
                  For instance, if AgeInYears contains the value 20 both
                  Teenager and Voter will be true.
                </p>
                <blockquote>
                  <pre align="left">
E.g. 02 AgeInYears  PIC 9(3). 
        88 Child    VALUE 0  THRU 12. 
        88 Teenager VALUE 13 THRU 19. 
        88 Adult    VALUE 21 THRU 999.
        88 Voter    VALUE 18 THRU 999. 
</pre
                  >
                </blockquote>
                <p>&nbsp;</p>
                <p align="left"><b>Condition Name notes</b></p>
                <ul>
                  <li>
                    A Condition Name evaluates to True or False depending on the
                    value of its associated data-item.
                  </li>
                  <li>
                    A Condition Name may be associated with any data-item,
                    whether it is a table element, or a group item, or an
                    elementary item.
                  </li>
                  <li>
                    The data values specified for a Condition Name must be
                    consistent with the data type of the associated data-item.
                  </li>
                </ul>
                <hr width="50%" />
              </td>
            </tr>
            <tr>
              <td valign="TOP" align="LEFT" width="175" bgcolor="#FFFFCC">
                <h4 align="left">
                  <font color="#800000" face="Arial, Helvetica, sans-serif"
                    >Condition Names examples
                  </font>
                </h4>
                <h4 align="left">&nbsp;</h4>
                <h4 align="left">&nbsp;</h4>
                <h4 align="left">&nbsp;</h4>
                <h4 align="left">&nbsp;</h4>
                <h4 align="left">&nbsp;</h4>
                <h4 align="left">&nbsp;</h4>
              </td>
              <td width="525" valign="top">
                <p>
                  Examine the examples in the animation below. Make sure you
                  understand how Condition Names are created, how they work and
                  how they are used.
                </p>
                <p align="center">
                  <a href="Resources/ppz/TC-Condition1.htm"
                    ><img
                      src="/cobol/course/Resources/pics/i-Animation.gif"
                      width="62"
                      height="62"
                      alt="Click to view the animation"
                      border="0"
                  /></a>
                </p>
                <hr width="50%" />
                <p>&nbsp;</p>
              </td>
            </tr>
            <tr>
              <td
                valign="top"
                align="LEFT"
                width="175"
                bgcolor="#FFFFCC"
                height="355"
              >
                <h4 align="left">
                  <font color="#800000" face="Arial, Helvetica, sans-serif"
                    >Using Condition Names correctly
                  </font>
                </h4>
              </td>
              <td width="525" valign="top" height="355">
                <p>
                  Condition Names should express the true condition being
                  tested. For instance, consider the condition names below. In
                  this example, the programmer has replaced the conditions that
                  tested EUCountryCode, with Condition Names that do the same
                  thing. Then he replaced the statement -
                  <i>IF EUCountryCode = 2</i> by <i>IF CodeIs2</i>.
                </p>
                <table width="75%" border="1" align="center">
                  <tr bgcolor="#E1FFE1" align="left">
                    <td>
                      <pre>
01 EUCountryCode PIC 99. 
   88 CodeIs1 VALUE 1. 
   88 CodeIs2 VALUE 2. 
   88 CodeIs3 VALUE 3. 
        etc. 
                   
IF CodeIs2 THEN 
   ADD Bonus to StructuralFunds(EUCountry) 
END-IF 
IF CodeIs1 THEN 
   SUBTRACT Bonus FROM StructuralFunds(EUCountry) 
END-IF 
                 </pre
                      >
                    </td>
                  </tr>
                </table>
                <p>
                  The problem with these Condition Names is that the true
                  condition being tested is not whether the code is 1 or 2, but
                  what country a code of 1 or 2 represents. Choosing condition
                  names like the ones above causes readability difficulties. For
                  instance, can you tell which country is gaining and which is
                  losing in the example above? No! You have to look at the rest
                  of the program to find out what code is assigned to what
                  country.
                </p>
                <p>
                  Now consider the Condition Names below. Can you see which
                  country is losing and which is gaining now?
                </p>
                <blockquote>
                  <table width="75%" border="1" align="center">
                    <tr bgcolor="#E1FFE1">
                      <td>
                        <pre>
01 EUCountryCode PIC 99. 
   88 France  VALUE 1. 
   88 Ireland VALUE 2. 
   88 Denmark VALUE 3. 
         etc. 


IF Ireland THEN 
   ADD Bonus to StructuralFunds(EUCountry) 
END-IF 
IF France THEN 
   SUBTRACT Bonus FROM StructuralFunds(EUCountry) 
END-IF 
</pre
                        >
                      </td>
                    </tr>
                  </table>
                </blockquote>
              </td>
            </tr>
            <tr>
              <td
                valign="top"
                align="left"
                width="700"
                bgcolor="#FFFFFF"
                colspan="2"
              >
                <div align="center">
                  <hr />
                  <p>
                    <a href="#top">
                      <img
                        src="Resources/pics/i-pagetop.gif"
                        width="132"
                        height="38"
                        border="0"
                    /></a>
                  </p>
                </div>
              </td>
            </tr>

            <tr>
              <td
                valign="top"
                align="LEFT"
                width="700"
                bgcolor="#993300"
                colspan="2"
              >
                <h2 align="CENTER">
                  <font color="#FFFF00"
                    ><a name="part2"></a
                    ><font face="Arial, Helvetica, sans-serif"
                      >Using the SET verb with Condition Names
                    </font></font
                  >
                </h2>
              </td>
            </tr>
            <tr>
              <td
                valign="top"
                align="LEFT"
                width="175"
                bgcolor="#FFFFCC"
                height="188"
              >
                <h4 align="left">
                  <font color="#800000" face="Arial, Helvetica, sans-serif"
                    >Introduction</font
                  >
                </h4>
              </td>
              <td width="525" valign="top" height="188">
                <p>
                  The SET verb is used for a number of unrelated functions in
                  COBOL, so instead of dealing with it as a single topic, we
                  will deal each format as we examine the construct to which it
                  is most closely related.
                </p>
                <p>
                  In this section, we show how the SET verb may be used to set a
                  Condition Name to True.
                </p>
                <hr width="50%" />
              </td>
            </tr>
            <tr>
              <td
                valign="top"
                align="LEFT"
                width="175"
                bgcolor="#FFFFCC"
                height="355"
              >
                <h4 align="left">
                  <font color="#800000" face="Arial, Helvetica, sans-serif"
                    >SET syntax
                  </font>
                </h4>
              </td>
              <td width="525" valign="top" height="355">
                <p>SET {ConditionName} ... TO TRUE</p>
                <p>
                  <font size="-1"></font><b> </b>A Condition Name set to true
                  when one of the condition values mentioned in its
                  <font size="-1">VALUE</font> clause is moved into its
                  associated data-item. But you can also set a Condition Name to
                  true using the <font size="-1">SET</font> verb.
                </p>
                <p>
                  When the <font size="-1">SET</font> verb is used to set a
                  Condition Name, the first condition value specified after the
                  <font size="-1">VALUE</font> clause in the definition is moved
                  to the associated data-item. Thus, the value of the associated
                  data-item is changed.
                </p>
                <p>
                  So, any operation which changes the value of the data-item may
                  change the status of the associated Condition Names, and any
                  operation which changes the status of a Condition Name may
                  change the value of its associated data-item.
                </p>
                <p>
                  It is not (at present) possible to set a condition name to
                  False.
                </p>
                <p>&nbsp;</p>
                <hr width="50%" />
              </td>
            </tr>

            <tr>
              <td
                valign="top"
                align="LEFT"
                width="175"
                bgcolor="#FFFFCC"
                height="355"
              >
                <h4 align="left">
                  <font color="#800000" face="Arial, Helvetica, sans-serif"
                    >SET verb example</font
                  >
                </h4>
              </td>
              <td width="525" valign="top" height="355">
                <p>
                  The <font size="-1">SET</font> verb is most often used to set
                  an end of file Condition Name when reading Sequential Files.
                  The animation below demonstrates how to set up and use an end
                  of file Condition Name.
                </p>
                <p>&nbsp;</p>
                <p align="center">
                  <a href="Resources/ppz/TC-Condition2.htm"
                    ><img
                      src="/cobol/course/Resources/pics/i-Animation.gif"
                      width="62"
                      height="62"
                      alt="Click to view the animation"
                      border="0"
                  /></a>
                </p>
                <p>&nbsp;</p>
                <hr width="50%" />
              </td>
            </tr>
            <tr>
              <td
                valign="top"
                align="LEFT"
                width="175"
                bgcolor="#FFFFCC"
                height="355"
              >
                <h4 align="left">
                  <font color="#800000" face="Arial, Helvetica, sans-serif"
                    >Using the SET verb with Sequential Files</font
                  >
                </h4>
                <h4 align="left">&nbsp;</h4>
                <h4 align="left">&nbsp;</h4>
                <h4 align="left">&nbsp;</h4>
                <h4 align="left">&nbsp;</h4>
                <h4 align="left">&nbsp;</h4>
                <h4 align="left">&nbsp;</h4>
                <h4 align="left">&nbsp;</h4>
                <h4 align="left">&nbsp;</h4>
                <h4 align="center">
                  <img
                    src="Resources/pics/ProgFrag.gif"
                    width="48"
                    height="44"
                  />
                </h4>
              </td>
              <td width="525" valign="top" height="355">
                <p>
                  The animation above demonstrated a simplified version of how
                  the <font size="-1">SET</font> verb may be used with
                  Sequential Files. One problem with the approach shown, is that
                  the Condition Name has to be declared in the
                  <font size="-1">WORKING-STORAGE SECTION</font> and there may
                  be hundreds of lines of code separating it from the file whose
                  end it is signalling.
                </p>
                <p>
                  In the program fragment below, a somewhat different approach
                  to setting an end of file Condition Name is demonstrated. This
                  is the method you should use in your programs.
                </p>
                <p>
                  In this example, the EndOfStudentFile Condition Name is
                  attached to the StudentDetails record. When EndOfStudentFile
                  is set to true, every character of the record is filled with
                  <font size="-1">HIGH-VALUES</font> (the highest
                  <font size="-1">ASCII </font>value the character can hold).
                </p>
                <p>
                  Filling the record with<font size="-1"> HIGH-VALUES</font>
                  produces a useful side-effect which we will examine when we
                  discuss updating Sequential Files.
                </p>
                <table
                  width="95%"
                  border="1"
                  height="93"
                  align="center"
                  background="Resources/pics/Code.gif"
                >
                  <tr>
                    <td>
                      <pre>
DATA DIVISION.
FILE SECTION.
FD StudentFile.
01 StudentDetails.
   88  EndOfStudentFile  VALUE HIGH-VALUES.
   02  StudentId       PIC 9(7).
   02  StudentName.
       03 Surname      PIC X(8).
       03 Initials     PIC XX.
   02  DateOfBirth.
       03 YOBirth      PIC 9(4).
       03 MOBirth      PIC 9(2).
       03 DOBirth      PIC 9(2).
   02  CourseCode      PIC X(4).
   02  Gender          PIC X.




     etc.


PROCEDURE DIVISION.
Begin.
   OPEN INPUT StudentFile
   READ StudentFile
      AT END SET EndOfStudentFile TO TRUE
   END-READ
   PERFORM UNTIL EndOfStudentFile
      DISPLAY StudentId SPACE StudentName SPACE CourseCode
      READ StudentFile
         AT END SET EndOfStudentFile TO TRUE
      END-READ
   END-PERFORM
   CLOSE StudentFile
   STOP RUN.


</pre
                      >
                    </td>
                  </tr>
                </table>
              </td>
            </tr>
            <tr>
              <td
                valign="top"
                align="left"
                width="700"
                bgcolor="#FFFFFF"
                colspan="2"
              >
                <div align="center">
                  <hr />
                  <p>
                    <a href="#top">
                      <img
                        src="Resources/pics/i-pagetop.gif"
                        width="132"
                        height="38"
                        border="0"
                    /></a>
                  </p>
                </div>
              </td>
            </tr>
            <tr>
              <td
                valign="top"
                align="LEFT"
                width="700"
                bgcolor="#993300"
                colspan="2"
              >
                <h2 align="CENTER">
                  <font color="#FFFF00"
                    ><a name="part4"></a
                    ><font face="Arial, Helvetica, sans-serif"
                      >The EVALUATE verb</font
                    ></font
                  >
                </h2>
              </td>
            </tr>
            <tr>
              <td valign="top" align="LEFT" width="175" bgcolor="#FFFFCC">
                <h4 align="left">
                  <font color="#800000" face="Arial, Helvetica, sans-serif"
                    >Introduction</font
                  >
                </h4>
              </td>
              <td width="525" valign="top">
                <p>
                  The <font size="-1">EVALUATE</font> verb is COBOL's version of
                  the Case or Switch construct but the
                  <font size="-1">EVALUATE</font> is far more powerful and
                  easier to use than either of these constructs.
                </p>
                <p>
                  The notes below briefly describe how the
                  <font size="-1">EVALUATE</font> verb works, but you'll want to
                  examine the syntax diagram in combination with the examples to
                  gain a fuller understanding.
                </p>
                <p>&nbsp;</p>
                <hr width="50%" />
                <p>&nbsp;</p>
              </td>
            </tr>
            <tr>
              <td
                valign="top"
                align="LEFT"
                width="175"
                bgcolor="#FFFFCC"
                height="355"
              >
                <h4 align="left">
                  <font color="#800000" face="Arial, Helvetica, sans-serif"
                    >Evaluate syntax
                  </font>
                </h4>
              </td>
              <td width="525" valign="top" height="355">
                <p>
                  <img
                    src="Resources/pics/Select7.gif"
                    width="523"
                    height="453"
                  />
                </p>
                <p>&nbsp;</p>
                <p>
                  <font size="-1"><b>EVALUATE</b></font
                  ><b> notes</b><br />
                  The items immediately after the word
                  <font size="-1">EVALUATE</font> and before the first
                  <font size="-1">WHEN</font> are called <i>subjects</i>.
                </p>
                <p>
                  The items between the <font size="-1">WHEN</font> and its
                  imperative statements are called <i>objects</i>.
                </p>
                <p>
                  The number of subject be equal to the number of objects and
                  the type of each <i>subject</i> must be compatible with the
                  type of its corresponding <i>object</i>.
                </p>
                <p>
                  The keyword <font size="-1">ALSO</font> must be used to
                  separate each object from its succeeding object and each
                  subject from its succeeding subject.
                </p>
                <p>
                  Only one <font size="-1">WHEN</font> branch is chosen per
                  execution of the <font size="-1">EVALUATE</font>, and the
                  checking of the <font size="-1">WHEN</font> branches is done
                  from top to bottom.
                </p>
                <p>
                  If none of the <font size="-1">WHEN</font> branches can be
                  chosen, and a <font size="-1">WHEN OTHER</font> phrase exists,
                  the <font size="-1">WHEN OTHER</font> branch is executed.
                </p>
                <p>
                  If none of the <font size="-1">WHEN</font> branches can be
                  chosen, and there is no
                  <font size="-1">WHEN OTHER</font> phrase, the
                  <font size="-1">EVALUATE</font> simply terminates.
                </p>
                <hr width="50%" />
              </td>
            </tr>
            <tr>
              <td
                valign="top"
                align="LEFT"
                width="175"
                bgcolor="#FFFFCC"
                height="355"
              >
                <h4 align="left">
                  <font color="#800000" face="Arial, Helvetica, sans-serif"
                    >EVALUATE example1
                  </font>
                </h4>
              </td>
              <td width="525" valign="top" height="355">
                <p>
                  <b> </b>We want to create a ten character edit field to accept
                  characters from the keyboard and allow them to be edited. The
                  edit field will be implemented as a ten character array as
                  shown below.
                </p>
                <p align="center">
                  <img
                    src="/cobol/course/Resources/pics/eval1.gif"
                    width="450"
                    height="100"
                    align="absmiddle"
                  />
                </p>
                <div align="center"></div>
                <p>What sort of functionality do we want to implement?</p>
                <ul>
                  <li>
                    We want to insert characters typed at the keyboard into the
                    array at the current cursor position and we want to move the
                    cursor one character to the right unless it is already in
                    position 10.
                  </li>
                  <li>
                    If a left arrow key is pressed we want to move the current
                    cursor position one character to the left.
                  </li>
                  <li>
                    If a right arrow key is pressed we want to move the cursor
                    position to the right.
                  </li>
                  <li>
                    If the delete key is pressed we want to delete the character
                    at the current cursor position and shunt the remaining
                    characters to the left.
                  </li>
                  <li>
                    We also want to implement wraparound so that if the cursor
                    is at the first character position and we press the left
                    arrow the cursor position is set to 10 and if the cursor is
                    in position 10 and the right arrow is pressed the cursor
                    position is set to 1.
                  </li>
                </ul>
                <p>
                  Let's assume we can get a character from the keyboard and that
                  we have used Condition Names to detect the left-arrow,
                  right-arrow and delete characters. What kind of an
                  <font size="-1">EVALUATE</font> statement would we need to
                  implement the rest of the functionality.
                </p>
                <table
                  width="76%"
                  border="1"
                  align="center"
                  cellspacing="0"
                  cellpadding="5"
                >
                  <tr bgcolor="#E1FFE1">
                    <td>
                      <pre>
EVALUATE TRUE   ALSO Position
   WHEN L-Arrow ALSO 2 THRU 10 SUBTRACT 1 FROM Position
   WHEN R-Arrow ALSO 1 THRU 9  ADD 1 TO Position
   WHEN L-Arrow ALSO    1      MOVE 10 TO Position
   WHEN R-Arrow ALSO   10      MOVE  1 TO Position
   WHEN DelKey  ALSO   ANY     PERFORM DeleteChar
   WHEN Char    ALSO 1 THRU 9  PERFORM InsertChar
                               ADD 1 TO Position
   WHEN Char ALSO     10       PERFORM InsertChar 
   WHEN OTHER PERFORM DisplayErrorMessage
END-EVALUATE
</pre
                      >
                    </td>
                  </tr>
                </table>

                <p>
                  <b>How does this <font size="-1">EVALUATE</font> work?</b
                  ><br />
                  The <b>subjects</b> are <font size="-1">TRUE</font> and
                  Position. So the first <b>object</b> after the
                  <font size="-1">WHEN</font> clause must specify a condition to
                  be compatible. with its <b>subject</b>, and the second must
                  specify a value or range of values. So the first
                  <font size="-1">WHEN</font> clause reads as -
                  <i
                    >When the L-Arrow Condition Name is true and the data-item
                    Position has a value in the range 2-10 then we add 1 to the
                    Position</i
                  >.
                </p>
                <p>
                  Finally, in a language you are already familiar with, write a
                  Switch/Case statement to do the same thing as the
                  <font size="-1">EVALUATE</font> above does.
                </p>
                <hr width="50%" />
                <p>&nbsp;</p>
              </td>
            </tr>
            <tr>
              <td
                valign="top"
                align="LEFT"
                width="175"
                bgcolor="#FFFFCC"
                height="355"
              >
                <h4 align="left">
                  <font color="#800000" face="Arial, Helvetica, sans-serif"
                    >EVALUATE example2</font
                  >
                </h4>
              </td>
              <td width="525" valign="top" height="355">
                <p>
                  As you have already seen in the example above, the
                  <font size="-1">EVALUATE</font> is very powerful construct;
                  but where it really shines is implementing decision table
                  logic. Consider the example below.
                </p>
                <p>
                  Jupiter Books - the largest on-line bookstore in the galaxy -
                  sells books, through the Internet, to customers all over the
                  world. For each order, Jupiter applies a percentage discount
                  based on - the quantity of books in the current order, the
                  value of books purchased in the last three months, and whether
                  the customer is a member of the Jupiter Book Club.
                </p>
                <p>
                  Jupiter Books uses a decision table to decide what discount to
                  apply. The decision table and the
                  <font size="-1">EVALUATE</font> which implements it are shown
                  below.
                </p>
                <table width="83%" border="1" align="center" bgcolor="#E1FFE1">
                  <tr bgcolor="#FFFFCC" valign="top">
                    <td width="20%" height="10">
                      <div align="center">
                        <p>QtyOfBooks</p>
                      </div>
                    </td>
                    <td width="43%" bgcolor="#FFFFCC" height="10">
                      <div align="center">ValueOfPurchases (VOP)</div>
                    </td>
                    <td width="14%" height="10">
                      <div align="center">ClubMember</div>
                    </td>
                    <td width="23%" height="10">
                      <div align="center">% Discount</div>
                    </td>
                  </tr>
                  <tr>
                    <td width="20%">
                      <div align="center">1-5</div>
                    </td>
                    <td width="43%">
                      <div align="center">$0-500</div>
                    </td>
                    <td width="14%">
                      <div align="center">Y</div>
                    </td>
                    <td width="23%">
                      <div align="center">2%</div>
                    </td>
                  </tr>
                  <tr>
                    <td width="20%">
                      <div align="center">6-16</div>
                    </td>
                    <td width="43%">
                      <div align="center">$0-500</div>
                    </td>
                    <td width="14%">
                      <div align="center">Y</div>
                    </td>
                    <td width="23%">
                      <div align="center">3%</div>
                    </td>
                  </tr>
                  <tr>
                    <td width="20%">
                      <div align="center">&gt;16</div>
                    </td>
                    <td width="43%">
                      <div align="center">$0-500</div>
                    </td>
                    <td width="14%">
                      <div align="center">Y</div>
                    </td>
                    <td width="23%">
                      <div align="center">5%</div>
                    </td>
                  </tr>
                  <tr>
                    <td width="20%">
                      <div align="center">1-5</div>
                    </td>
                    <td width="43%">
                      <div align="center">$501-2000</div>
                    </td>
                    <td width="14%">
                      <div align="center">Y</div>
                    </td>
                    <td width="23%">
                      <div align="center">7%</div>
                    </td>
                  </tr>
                  <tr>
                    <td width="20%">
                      <div align="center">6-16</div>
                    </td>
                    <td width="43%">
                      <div align="center">$501-2000</div>
                    </td>
                    <td width="14%">
                      <div align="center">Y</div>
                    </td>
                    <td width="23%">
                      <div align="center">12%</div>
                    </td>
                  </tr>
                  <tr>
                    <td width="20%">
                      <div align="center">&gt;16</div>
                    </td>
                    <td width="43%">
                      <div align="center">$501-2000</div>
                    </td>
                    <td width="14%">
                      <div align="center">Y</div>
                    </td>
                    <td width="23%">
                      <div align="center">18%</div>
                    </td>
                  </tr>
                  <tr>
                    <td width="20%">
                      <div align="center">1-5</div>
                    </td>
                    <td width="43%">
                      <div align="center">&gt; $2000</div>
                    </td>
                    <td width="14%">
                      <div align="center">Y</div>
                    </td>
                    <td width="23%">
                      <div align="center">10%</div>
                    </td>
                  </tr>
                  <tr>
                    <td width="20%">
                      <div align="center">6-16</div>
                    </td>
                    <td width="43%">
                      <div align="center">&gt; $2000</div>
                    </td>
                    <td width="14%">
                      <div align="center">Y</div>
                    </td>
                    <td width="23%">
                      <div align="center">23%</div>
                    </td>
                  </tr>
                  <tr>
                    <td width="20%">
                      <div align="center">&gt;16</div>
                    </td>
                    <td width="43%">
                      <div align="center">&gt; $2000</div>
                    </td>
                    <td width="14%">
                      <div align="center">Y</div>
                    </td>
                    <td width="23%">
                      <div align="center">35%</div>
                    </td>
                  </tr>
                  <tr>
                    <td width="20%">
                      <div align="center">1-5</div>
                    </td>
                    <td width="43%">
                      <div align="center">$0-500</div>
                    </td>
                    <td width="14%">
                      <div align="center">N</div>
                    </td>
                    <td width="23%">
                      <div align="center">1%</div>
                    </td>
                  </tr>
                  <tr>
                    <td width="20%">
                      <div align="center">6-16</div>
                    </td>
                    <td width="43%">
                      <div align="center">$0-500</div>
                    </td>
                    <td width="14%">
                      <div align="center">N</div>
                    </td>
                    <td width="23%">
                      <div align="center">2%</div>
                    </td>
                  </tr>
                  <tr>
                    <td width="20%">
                      <div align="center">&gt;16</div>
                    </td>
                    <td width="43%">
                      <div align="center">$0-500</div>
                    </td>
                    <td width="14%">
                      <div align="center">N</div>
                    </td>
                    <td width="23%">
                      <div align="center">3%</div>
                    </td>
                  </tr>
                  <tr>
                    <td width="20%">
                      <div align="center">1-5</div>
                    </td>
                    <td width="43%">
                      <div align="center">$501-2000</div>
                    </td>
                    <td width="14%">
                      <div align="center">N</div>
                    </td>
                    <td width="23%">
                      <div align="center">5%</div>
                    </td>
                  </tr>
                  <tr>
                    <td width="20%">
                      <div align="center">6-16</div>
                    </td>
                    <td width="43%">
                      <div align="center">$501-2000</div>
                    </td>
                    <td width="14%">
                      <div align="center">N</div>
                    </td>
                    <td width="23%">
                      <div align="center">10%</div>
                    </td>
                  </tr>
                  <tr>
                    <td width="20%">
                      <div align="center">&gt;16</div>
                    </td>
                    <td width="43%">
                      <div align="center">$501-2000</div>
                    </td>
                    <td width="14%">
                      <div align="center">N</div>
                    </td>
                    <td width="23%">
                      <div align="center">15%</div>
                    </td>
                  </tr>
                  <tr>
                    <td width="20%">
                      <div align="center">1-5</div>
                    </td>
                    <td width="43%">
                      <div align="center">&gt; $2000</div>
                    </td>
                    <td width="14%">
                      <div align="center">N</div>
                    </td>
                    <td width="23%">
                      <div align="center">8%</div>
                    </td>
                  </tr>
                  <tr>
                    <td width="20%">
                      <div align="center">6-16</div>
                    </td>
                    <td width="43%">
                      <div align="center">&gt; $2000</div>
                    </td>
                    <td width="14%">
                      <div align="center">N</div>
                    </td>
                    <td width="23%">
                      <div align="center">23%</div>
                    </td>
                  </tr>
                  <tr>
                    <td width="20%">
                      <div align="center">&gt;16</div>
                    </td>
                    <td width="43%">
                      <div align="center">&gt; $2000</div>
                    </td>
                    <td width="14%">
                      <div align="center">N</div>
                    </td>
                    <td width="23%">
                      <div align="center">28%</div>
                    </td>
                  </tr>
                </table>
                <p>&nbsp;</p>
                <table
                  width="96%"
                  border="1"
                  bgcolor="#E1FFE1"
                  align="center"
                  cellpadding="5"
                >
                  <tr valign="top">
                    <td height="331">
                      <pre>
EVALUATE Qty     ALSO    TRUE    ALSO Member 
 WHEN  1 THRU 5  ALSO VOP &lt; 501  ALSO &quot;Y&quot;  MOVE 2  TO Discount
 WHEN  6 THRU 16 ALSO VOP &lt; 501  ALSO &quot;Y&quot;  MOVE 3  TO Discount
 WHEN 17 THRU 99 ALSO VOP &lt; 501  ALSO &quot;Y&quot;  MOVE 5  TO Discount
 WHEN  1 THRU 5  ALSO VOP &lt; 2001 ALSO &quot;Y&quot;  MOVE 7  TO Discount
 WHEN  6 THRU 16 ALSO VOP &lt; 2001 ALSO &quot;Y&quot;  MOVE 12 TO Discount
 WHEN 17 THRU 99 ALSO VOP &lt; 2001 ALSO &quot;Y&quot;  MOVE 18 TO Discount
 WHEN  1 THRU 5  ALSO VOP &gt; 2000 ALSO &quot;Y&quot;  MOVE 10 TO Discount
 WHEN  6 THRU 16 ALSO VOP &gt; 2000 ALSO &quot;Y&quot;  MOVE 23 TO Discount
 WHEN 17 THRU 99 ALSO VOP &gt; 2000 ALSO &quot;Y&quot;  MOVE 35 TO Discount
 WHEN  1 THRU 5  ALSO VOP &lt; 501  ALSO &quot;N&quot;  MOVE 1  TO Discount
 WHEN  6 THRU 16 ALSO VOP &lt; 501  ALSO &quot;N&quot;  MOVE 2  TO Discount
 WHEN 17 THRU 99 ALSO VOP &lt; 501  ALSO &quot;N&quot;  MOVE 3  TO Discount
 WHEN  1 THRU 5  ALSO VOP &lt; 2001 ALSO &quot;N&quot;  MOVE 5  TO Discount
 WHEN  6 THRU 16 ALSO VOP &lt; 2001 ALSO &quot;N&quot;  MOVE 10 TO Discount
 WHEN 17 THRU 99 ALSO VOP &lt; 2001 ALSO &quot;N&quot;  MOVE 15 TO Discount
 WHEN  1 THRU 5  ALSO VOP &gt; 2000 ALSO &quot;N&quot;  MOVE 8  TO Discount
 WHEN  6 THRU 16 ALSO VOP &gt; 2000 ALSO &quot;N&quot;  MOVE 23 TO Discount
 WHEN 17 THRU 99 ALSO VOP &gt; 2000 ALSO &quot;N&quot;  MOVE 28 TO Discount
END-EVALUATE
</pre
                      >
                    </td>
                  </tr>
                </table>
                <p>
                  <b>Comments<br /> </b>Notice how easily and clearly the
                  decision table is implemented using an
                  <font size="-1">EVALUATE</font>. Not only is the
                  <font size="-1">EVALUATE</font> clear but there is no
                  temptation to take shortcuts which may cause problems later.
                  For instance, at the moment, a discount of 23% is offered in
                  two places in the table. A programmer writing in C might be
                  tempted to take advantage of this by coding;
                </p>
                <pre>
if((Qty &gt; 5) && (Qty &lt; 17)) && (VOP &gt; 2000)
 { Discount = 23;
 }//end-if</pre
                >
                <p>
                  This immediately causes problems of readability. You have to
                  ask yourself; is this an accurate reflection of the decision
                  table or has the programmer introduced an error?
                </p>
                <p>
                  This code will also cause maintenance problems. What's going
                  to happen if Jupiter decide change the second 23% discount to
                  20%. Big rewrite of the C code. One change to the COBOL code.
                </p>
                <p>&nbsp;</p>
                <p>&nbsp;</p>
              </td>
            </tr>

            <tr>
              <td align="left" width="700" bgcolor="#FFFFFF" colspan="2">
                <hr width="100%" />
                <div align="center">
                  <p>
                    <a href="#top">
                      <img
                        src="Resources/pics/i-pagetop.gif"
                        width="132"
                        height="38"
                        border="0"
                    /></a>
                  </p>
                  <hr />
                  <h3 align="center">Copyright Notice</h3>
                  <p align="center">
                    These COBOL course materials are the copyright property of
                    Michael Coughlan.
                  </p>
                  <p align="left">
                    <font size="2"
                      >All rights reserved. No part of these course materials
                      may be reproduced in any form or by any means - graphic,
                      electronic, mechanical, photocopying, printing, recording,
                      taping or stored in an information storage and retrieval
                      system - without the written permission of </font
                    ><font size="2">the author.</font>
                  </p>
                  <p align="center">
                    <font size="2">(c) Michael Coughlan</font>
                  </p>
                  <hr align="left" />
                  <div align="left">
                    <i><font size="-1">Last updated : March 1999</font></i>
                    <br />
                    <font size="-1"
                      ><a href="mailto:michael.coughlan@ul.ie"
                        >e-mail : CSISwebeditor@ul.ie</a
                      ></font
                    >
                  </div>
                </div>
              </td>
            </tr>
          </table>
        </td>
      </tr>
    </table>
  </body>
</html>
