<div class="mui-container">
  <h1>All Products</h1>
  <div class="mui-row">
    <div class="mui-col-sm-4">
      <div class="mui-panel product-sidebar">
        {{#if (not (equal request.url "/products") ) }}
          <a class='mui-btn mui-btn--accent' href="/products">&times; Clear Filter</a>
        {{/if}}
        <h3>Inventory</h3>
        <p>
          <a href="{{merge-qps request.url inventory=null}}">All</a> |
          <a href="{{merge-qps request.url inventory='discontinued'}}">Discontinued</a> |
          <a href="{{merge-qps request.url inventory='needs-reorder'}}">Needs Reorder</a>
        </p>
        <h3>Tags</h3>
        <p>
        <a href="{{merge-qps request.url tags=''}}">None</a> |
          <a href="{{merge-qps request.url tags=(join (dedupe (concat (split (or request.query.tags '') ',') 'alcoholic') ) ',')}}">Alcoholic</a> |
          <a href="{{merge-qps request.url tags=(join (dedupe (concat (split (or request.query.tags '') ',') 'refrigerated') ) ',')}}">Refrigerated</a> |
          <a href="{{merge-qps request.url tags=(join (dedupe (concat (split (or request.query.tags '') ',') 'dry') ) ',')}}">Dry</a> |
          <a href="{{merge-qps request.url tags=(join (dedupe (concat (split (or request.query.tags '') ',') 'canned') ) ',')}}">Canned</a> |
        </p>
        <h3>Flavors</h3>
        <p>
          <a href="{{merge-qps request.url flav=''}}">All</a> |
          <a href="{{merge-qps request.url flav='sweet-hot'}}">Sweet &amp; Hot</a> |
          <a href="{{merge-qps request.url flav='refreshing'}}">Sour &amp; Bitter</a> |
          <a href="{{merge-qps request.url flav='sweet-sour'}}">Sweet &amp; Sour</a>
        </p>
      </div>
    </div>
    <div class="mui-col-sm-8">
    <ul class='collection'>
        {{#each products as |p|}}
        <li>
          <div class='mui-panel {{#if p.discontinued}}fade-out{{/if}}' href="/products/{{p.id}}">
            <div class="mui-row">
              <div class="mui-col-sm-6 mui-col-md-8">
                {{#link-to href=(concat '/products/' p.id) }}
                <h3 class='mui-panel__title mui--pull-left' style='margin-right: 10px'>
                  {{p.productname}}
                </h3>
                {{/link-to}}
                <p style='line-height: 3rem'>
                  {{p.quantityperunit}}
                </p>
                <p>
                  <b>Unit Price:</b> ${{p.unitprice}}
                </p>
                <p>
                  <b>Supplier:</b> {{#link-to href=(concat '/suppliers/' p.supplierid)}} {{or p.suppliername p.supplierid}} {{/link-to}}
                </p>
                <p>
                  <b>Category:</b> {{or p.categoryname p.categoryid}}
                </p>
                <p>
                  <b>Inventory:</b>
                  {{p.unitsinstock}} in stock and {{p.unitsonorder}} on order.
                </p>
                <p>
                  <b>Reorder Level: </b> {{p.reorderlevel}}
                </p>
              </div>
              <div class="mui-col-sm-6 mui-col-md-4" >
                <span class='mui--pull-right'>
                  {{#if p.discontinued}}
                  <span class="mui-badge mui--bg-color-red">DISCONTINUED</span>
                  {{else}}
                  <span>
                    {{#if (less-than (add p.unitsinstock p.unitsonorder) p.reorderlevel)}}
                    <span class="mui-badge mui--bg-color-indigo">REORDER</span>
                    {{/if}}
                  </span>
                  {{/if}}
                </span>
                <form class="mui-form flavor-profile" action="/products/{{p.id}}">
                  <div class='mui-textfield flavor-slider'>
                    <label for="spicy">Spicy</label>
                    <input type="range" name="spicy" value="{{p.metadata.flavor.spicy}}" min=-1 max=5 />
                  </div>
                  <div class='mui-textfield flavor-slider'>
                    <label for="sour">Sour</label>
                    <input type="range" name="sour" value="{{p.metadata.flavor.sour}}" min=-1 max=5 />
                  </div>
                  <div class='mui-textfield flavor-slider'>
                    <label for="sweet">Sweet</label>
                    <input type="range" name="sweet" value="{{p.metadata.flavor.sweet}}" min=-1 max=5 />
                  </div>
                  <div class='mui-textfield flavor-slider'>
                    <label for="bitter">Bitter</label>
                    <input type="range" name="bitter" value="{{p.metadata.flavor.bitter}}" min=-1 max=5 />
                  </div>
                  <div class='mui-textfield flavor-slider'>
                    <label for="salty">Salty</label>
                    <input type="range" name="salty" value="{{p.metadata.flavor.salty}}" min=-1 max=5 />
                  </div>
                  <div class='mui-textfield tags-field'>
                    <label for="tags">Tags</label>
                    <div class='tags-container'>
                      <input type="text" name="tags" class='tags-input' value="{{to-csv p.tags}}" />
                    </div>
                  </div>
                  
                  <button class='save-button mui--hide mui-btn mui-btn--accent'>Save</button>
                </form>
              </div>
            </div>
          </div>
        </li>
        {{else}}
        <li>No products</li>
        {{/each}}
      </ul>
    </div>
  </div>
</div>
<script>
  function updateFlavorAndTags(evt) {
    evt.preventDefault();
    let values = {};
    for (let i in evt.target.elements) {
      let n = evt.target.elements[i].name;
      if (['sweet', 'spicy', 'salty', 'sour', 'bitter'].indexOf(n) >= 0) {
        values[evt.target.elements[i].name] = parseInt(evt.target.elements[i].value, 10);
      }
    }
    let saveButton = evt.target.querySelector('button.save-button');
    saveButton.disabled = true;
    let tags = evt.target.querySelector('input[name="tags"]').value.split(/\s*\,\s*/g);
    fetch(evt.target.action, {
      method: 'put',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        metadata: { flavor: values },
        tags
      })
    }).then((resp) => {
      if (resp.ok) {
        saveButton.classList.add('mui--hide');
        saveButton.disabled = false;
      } else {
        return resp.text().then(errorMessage => {
          throw new Error('SERVER ERROR\nmessage: ' + errorMessage.toString());
        });
      }
    }).catch((err) => {
      if (err instanceof Error) throw err;
      else throw new Error(err);
    });
  }

  function findParent(e, fn) {
    let p = e;
    do {
      p = p.parentElement;
    } while (p !== null && !fn(p));
    return p;
  }

  function revealSaveButton(evt, form = findParent(evt.target, p => p.tagName === 'FORM' && p.classList.contains('flavor-profile'))) {
    form.querySelector('button.save-button').classList.remove('mui--hide');
  }
  window.addEventListener('load', () => {

    document.querySelectorAll('form.flavor-profile').forEach((form) => {
      if (form.attachEvent) {
        form.attachEvent('submit', updateFlavorAndTags);
      } else {
        form.addEventListener('submit', updateFlavorAndTags);
      }
    });
    document.querySelectorAll('form.flavor-profile input').forEach((input) => {
      let eventName = null;
      switch (input.type) {
        case 'range': eventName = 'change'; break;
        case 'text': eventName = 'input'; break;
      }
      if (input.attachEvent) {
        input.attachEvent(eventName, revealSaveButton);
      } else {
        input.addEventListener(eventName, revealSaveButton);
      }
    });
    $('.tags-input').selectize({
      delimiter: ',',
      plugins: ['restore_on_backspace', 'remove_button'],
      persist: false,
      create: function (input) {
        return {
          value: input,
          text: input
        }
      },
      onChange() {
        revealSaveButton(null, this.$input.closest('form.flavor-profile')[0]);
      }
    });
  })
</script>